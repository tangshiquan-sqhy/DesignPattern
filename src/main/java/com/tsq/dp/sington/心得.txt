此单例写法为双重检查锁(double-checked locking)方式。
instance = new Sington();是在底层分为3步执行：1）开辟内存空间；2）调用初始化方法；3）给instance变量赋引用。
由于在代码编译、内存加载、CPU执行等阶段都会因为优化而进行指令重排。所以第二步和第三步可能会交换执行。
这种情况下，其它线程在if (instance == null) 判断时，会发现instance变量已经有引用值，则会返回引用值。
然而，调用者却发现此引用对应的对象还是个空对象，无法使用（因为获取锁的线程还没有调初始化方法），程序便会报异常。
而加了volatile之后，禁止指令重排，保证了第二步和第三步按顺序执行。